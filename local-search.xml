<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>基于 GitHub Pages + Hexo 搭建个人博客</title>
    <link href="/2022/11/27/my-blog-build-remark/"/>
    <url>/2022/11/27/my-blog-build-remark/</url>
    
    <content type="html"><![CDATA[<p>本博客基于 <code>Github Pages + Hexo</code>，<code>Hexo</code> 是一个快速、简单且功能强大的博客框架。支持使用 <code>Markdown</code> 写文章，<code>Hexo</code> 会在几秒内生成带有各种自定义主题、并且集成了各项功能的网站页面。</p><h3 id="零、准备工作"><a href="#零、准备工作" class="headerlink" title="零、准备工作"></a>零、准备工作</h3><h4 id="1-使用个人-GitHub-创建仓库，并配置-GitHub-Pages"><a href="#1-使用个人-GitHub-创建仓库，并配置-GitHub-Pages" class="headerlink" title="1. 使用个人 GitHub 创建仓库，并配置 GitHub Pages"></a>1. 使用个人 <a href="https://github.com/">GitHub</a> 创建仓库，并配置 <code>GitHub Pages</code></h4><p><strong>注意:</strong><br>此仓库用于存放我们的博客页面，仓库名必须使用：<code>&lt;GitHub用户名&gt;.github.io</code> 格式。</p><p>仓库创建好之后，我们可以在仓库根路径下创建一个名为 <code>index.html</code> 的静态 <code>HTML</code> 文件来验证我们的网站是否搭建成功</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Someone&#x27;s Blog<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello, Blog World ~<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在 <code>&lt;GitHub用户名&gt;.github.io</code> 仓库对应的 <code>GitHub Pages</code> 设置页面 (访问路径：<code>Settings -&gt; Pages</code>) 可以找到我们的主页访问地址：https:&#x2F;&#x2F;&lt;GitHub用户名&gt;.github.io，在浏览器中访问该地址，能正常访问表示我们的 <code>GitHub Pages</code> 搭建成功。</p><h4 id="2-安装-Git-和-NodeJS"><a href="#2-安装-Git-和-NodeJS" class="headerlink" title="2. 安装 Git 和 NodeJS"></a>2. 安装 <code>Git</code> 和 <code>NodeJS</code></h4><p><code>Hexo</code> 是基于 <code>NodeJS</code> 编写的，在开始之前我们需要先安装 <code>NodeJS</code> 和 <code>npm</code> 工具。具体可以网上自己找教程或者参考我如下的步骤</p><p>我的本地环境是 <code>Windows 11 + PowerShell</code>，包管理工具使用的是 <a href="https://scoop.sh/">Scoop</a>，<code>NodeJS</code> 通过 <code>nvm</code> 来管理，如下安装步骤需要在 <code>PowerShell</code> 里执行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell">scoop install git <span class="hljs-comment"># 安装Git</span><br><br>scoop install nvm <span class="hljs-comment"># 安装 nvm</span><br>nvm list available <span class="hljs-comment"># 查看可用的 NodeJS 版本，这里建议使用 LTS 版本</span><br>nvm install <span class="hljs-number">16.18</span>.<span class="hljs-number">0</span> <span class="hljs-comment"># 安装 NodeJS，我这里安装的是最新 LTS 版本 16.18.0</span><br>sudo nvm use <span class="hljs-number">16.18</span>.<span class="hljs-number">0</span> <span class="hljs-comment"># NodeJS 版本使用 16.18.0，注意这里需要管理员权限，可以先使用 scoop 安装 sudo 这个工具</span><br></code></pre></td></tr></table></figure><h3 id="一、安装-Hexo"><a href="#一、安装-Hexo" class="headerlink" title="一、安装 Hexo"></a>一、安装 <code>Hexo</code></h3><p>此处只列出本博客所需的关键步骤，更多说明详见官方文档：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><h4 id="1-全局安装-hexo-cli-工具"><a href="#1-全局安装-hexo-cli-工具" class="headerlink" title="1. 全局安装 hexo-cli 工具"></a>1. 全局安装 <code>hexo-cli</code> 工具</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br><br>hexo -v <span class="hljs-comment"># 查看版本，目前最新版本为 4.3.0</span><br></code></pre></td></tr></table></figure><h4 id="2-创建一个项目-my-blog-并初始化"><a href="#2-创建一个项目-my-blog-并初始化" class="headerlink" title="2. 创建一个项目 my-blog 并初始化"></a>2. 创建一个项目 <code>my-blog</code> 并初始化</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init my-blog<br><span class="hljs-built_in">cd</span> my-blog<br>npm install<br></code></pre></td></tr></table></figure><h4 id="3-生成网页文件-amp-本地启动"><a href="#3-生成网页文件-amp-本地启动" class="headerlink" title="3. 生成网页文件 &amp; 本地启动"></a>3. 生成网页文件 &amp; 本地启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo generate <span class="hljs-comment"># 生成页面，此命令可以简写为 `hexo g`</span><br>hexo server <span class="hljs-comment"># 本地启动，可简写为 `hexo s`</span><br></code></pre></td></tr></table></figure><p>通过 <code>hexo g</code> 生成的页面文件在项目 <code>public</code> 目录下，通过 <code>hexo clean</code> 命令可以清理生成的页面文件，当我们的配置未生效时，建议执行下清理命令</p><h4 id="4-本地访问"><a href="#4-本地访问" class="headerlink" title="4. 本地访问"></a>4. 本地访问</h4><p>通过浏览器访问：<a href="http://localhost:4000/">http://localhost:4000/</a> 可以看到一个比较简陋的页面，没关系，下一章节我们将介绍如何更换主题</p><h3 id="二、安装-amp-配置主题"><a href="#二、安装-amp-配置主题" class="headerlink" title="二、安装&amp;配置主题"></a>二、安装&amp;配置主题</h3><p>通过上面章节所介绍的步骤，我们已经能够通过本地访问博客页面了，但 <code>Hexo</code> 默认的主题不太好看，好在官方提供了数百种主题供我们选择，可以根据个人喜好更换，具体可以点击 <a href="https://hexo.io/themes/">这里</a> 查看，本博客使用的是 <a href="https://fluid-dev.github.io/hexo-fluid-docs/">Fluid</a> 主题，这里仅介绍此主题的安装与配置。</p><h4 id="1-安装-Fluid-主题"><a href="#1-安装-Fluid-主题" class="headerlink" title="1. 安装 Fluid 主题"></a>1. 安装 <a href="https://fluid-dev.github.io/hexo-fluid-docs/">Fluid</a> 主题</h4><p>官方提供了两种 <a href="https://fluid-dev.github.io/hexo-fluid-docs/start/#%E8%8E%B7%E5%8F%96%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC">安装方式</a>，这里使用官方推荐的 <code>npm</code> 方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><p>然后在博客根路径下创建 <code>_config.fluid.yml</code> 文件，并将主题的 <code>./node_modules/hexo-theme-fluid/_config.yml</code> 文件内容复制过去</p><h4 id="2-指定主题"><a href="#2-指定主题" class="headerlink" title="2. 指定主题"></a>2. 指定主题</h4><p>将如下修改应用到 <code>Hexo</code> 博客目录中的 <code>_config.yml</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 指定主题</span><br><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure><h4 id="3-创建「关于页」"><a href="#3-创建「关于页」" class="headerlink" title="3. 创建「关于页」"></a>3. 创建「关于页」</h4><p>首次使用主题的「关于页」需要手动创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page about<br></code></pre></td></tr></table></figure><p>创建成功后修改 <code>/source/about/index.md</code>，添加 layout 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">标题</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里写关于页的正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></table></figure><p><strong>WARNING</strong><br><code>layout: about</code> 必须存在，并且不能修改成其他值，否则不会显示头像等样式。</p><h4 id="4-更新-Fluid-主题"><a href="#4-更新-Fluid-主题" class="headerlink" title="4. 更新 Fluid 主题"></a>4. 更新 <code>Fluid</code> 主题</h4><p>适用于通过 <code>npm</code> 安装主题</p><p>在博客目录下执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm update --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><h4 id="5-本地启动"><a href="#5-本地启动" class="headerlink" title="5. 本地启动"></a>5. 本地启动</h4><p>执行如下命令重新生成页面，并启动 <code>Hexo</code> 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br>hexo g<br>hexo s<br><br>BASH<br></code></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> , 可以看到页面变得漂亮多了</p><h3 id="三、创建文章"><a href="#三、创建文章" class="headerlink" title="三、创建文章"></a>三、创建文章</h3><p>修改 <code>_config.yml</code> 文件，这项配置是为了在生成文章的时候同时生成一个同名的资源目录用于存放图片等资源文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>创建文件名为 <code>my-blog-build-remark</code> 文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new post my-blog-build-remark<br></code></pre></td></tr></table></figure><p>设置文章的标题及其他元数据信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">基于</span> <span class="hljs-string">GitHub</span> <span class="hljs-string">Pages</span> <span class="hljs-string">+</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">搭建个人博客</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-10-16 19:42:53</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">&#x27;hexo&#x27;</span>,<span class="hljs-string">&#x27;fluid&#x27;</span>]<br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>如上命令执行成功后，在 <code>source/_posts/</code> 目录下生成了一个 <code>Markdown</code> 文件和一个同名的资源目录</p><p>在 <code>source/_posts/my-blog-build-remark</code> 目录中放置一个图片文件 <code>posts-file-tree.png</code>，整体目录结构如下：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs dos">$ source/_posts (main)&gt; <span class="hljs-built_in">tree</span><br>.<br>├── hello-world.<span class="hljs-built_in">md</span><br>├── my-blog-build-remark<br>│   └── posts-file-<span class="hljs-built_in">tree</span>.png<br>└── my-blog-build-remark.<span class="hljs-built_in">md</span><br><br>SHELL<br></code></pre></td></tr></table></figure><p>然后在文章的 <code>Markdown</code> 文件里通过如下方式即可引用对应的图片</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">asset_img</span> posts-file-tree.png 目录结构 %&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><br><span class="language-xml">MARKDOWN</span><br></code></pre></td></tr></table></figure><p>关于图片的引用方式，不只有这一种，具体可参考官方文档 <a href="https://hexo.io/zh-cn/docs/asset-folders.html">https://hexo.io/zh-cn/docs/asset-folders.html</a> ，里边有非常详细的介绍</p><p>文章创建并编辑好之后，就可以通过 <code>hexo g &amp;&amp; hexo s</code> 命令来启动服务并在本地预览文章</p><h3 id="四、配置指南"><a href="#四、配置指南" class="headerlink" title="四、配置指南"></a>四、配置指南</h3><p>如无特殊说明，如下配置文件一律默认为<strong>主题配置</strong>文件：<code>_config.fluid.yml</code></p><h4 id="1-页面-title-修改"><a href="#1-页面-title-修改" class="headerlink" title="1. 页面 title 修改"></a>1. 页面 title 修改</h4><p>修改 <code>_config.yml</code> 文件</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">title:</span> <span class="hljs-string">&quot;请填写你自己的博客标题&quot;</span><br><span class="hljs-symbol">subtitle:</span> <span class="hljs-comment">&#x27;&#x27;</span><br><span class="hljs-symbol">description:</span> <span class="hljs-comment">&#x27;&#x27;</span><br><span class="hljs-symbol">keywords:</span><br><span class="hljs-symbol">author:</span> 请填写你自己的署名<br><span class="hljs-symbol">language:</span> zh-CN<br><span class="hljs-symbol">timezone:</span> <span class="hljs-comment">&#x27;&#x27;</span><br><br>YAML<br></code></pre></td></tr></table></figure><h4 id="2-博客标题"><a href="#2-博客标题" class="headerlink" title="2. 博客标题"></a>2. 博客标题</h4><p>页面左上角的博客标题，默认使用**站点配置(_config.yml)**中的 <code>title</code>，这个配置同时控制着网页在浏览器标签中的标题。<br>如需单独区别设置，可在**主题配置**中设置</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">navbar:</span><br><span class="hljs-symbol">  blog_title:</span> <span class="hljs-string">&quot;请填写你自己的博客标题&quot;</span><br><br>YAML<br></code></pre></td></tr></table></figure><h4 id="3-首页-Slogan-打字机"><a href="#3-首页-Slogan-打字机" class="headerlink" title="3. 首页 - Slogan(打字机)"></a>3. 首页 - Slogan(打字机)</h4><p>首页大图中的标题文字，可在<strong>主题配置</strong>中设定是否开启，这里支持配置固定的 <code>text</code> 或者从远程 <code>api</code> 实时获取，优先级 <code>api &gt; text</code></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">index:</span><br><span class="hljs-symbol">  slogan:</span><br><span class="hljs-symbol">    enable:</span> true<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">    text:</span> <span class="hljs-string">&quot;Please type your slogan here&quot;</span><br><span class="hljs-symbol">    api:</span><br><span class="hljs-symbol">      enable:</span> true<br><span class="hljs-symbol">      url:</span> <span class="hljs-string">&quot;https://v1.hitokoto.cn/&quot;</span><br><span class="hljs-symbol">      method:</span> <span class="hljs-string">&quot;GET&quot;</span><br><span class="hljs-symbol">      headers:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-symbol">      keys:</span> [<span class="hljs-string">&quot;hitokoto&quot;</span>]<br><br>YAML<br></code></pre></td></tr></table></figure><h3 id="五、网页访问统计"><a href="#五、网页访问统计" class="headerlink" title="五、网页访问统计"></a>五、网页访问统计</h3><p>目前 <code>Fluid</code> 支持多种统计网站，这里只介绍 <code>LeanCloud</code> 的配置，使用 <code>LeanCloud</code> 之前，需要先注册账户，具体请访问其 <a href="https://www.leancloud.cn/">官网</a> 完成账户注册，并新建应用（需实名认证），在 <code>控制台 -&gt; 应用 -&gt; 设置 -&gt; 应用凭证</code> 页面中找到对应的 <code>AppID</code>、<code>AppKey</code>、<code>REST API 服务器地址</code> 等信息填入 <strong>主题配置</strong> 中。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">web_analytics:</span>  <span class="hljs-comment"># 网页访问统计</span><br>  <span class="hljs-attr">leancloud:</span><br>    <span class="hljs-attr">app_id:</span> <span class="hljs-comment"># AppID</span><br>    <span class="hljs-attr">app_key:</span> <span class="hljs-comment"># AppKey</span><br>    <span class="hljs-comment"># REST API 服务器地址，国际版不填</span><br>    <span class="hljs-comment"># Only the Chinese mainland users need to set</span><br>    <span class="hljs-attr">server_url:</span> <span class="hljs-comment"># REST API 服务器地址</span><br><br>    <span class="hljs-comment"># 开启后不统计本地路径( localhost 与 127.0.0.1 )</span><br>    <span class="hljs-comment"># If true, ignore localhost &amp; 127.0.0.1</span><br>    <span class="hljs-attr">ignore_local:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-string">YAML</span><br></code></pre></td></tr></table></figure><p>如无特殊需要，记得配置 <code>ignore_local: true</code>，这样 LeanCloud 在 localhost 域名下访问不会增加数据</p><h4 id="1-展示-PV-与-UV-统计"><a href="#1-展示-PV-与-UV-统计" class="headerlink" title="1. 展示 PV 与 UV 统计"></a>1. 展示 PV 与 UV 统计</h4><p>页脚可以展示 PV 与 UV 统计数据，目前支持两种数据来源：<code>LeanCloud</code> 与 <code>不蒜子</code></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">footer:</span><br><span class="hljs-symbol">  statistics:</span><br><span class="hljs-symbol">    enable:</span> true<br><span class="hljs-symbol">    source:</span> <span class="hljs-string">&quot;leancloud&quot;</span><br><span class="hljs-symbol">    pv_format:</span> <span class="hljs-string">&quot;总访问量 &#123;&#125; 次&quot;</span><br><span class="hljs-symbol">    uv_format:</span> <span class="hljs-string">&quot;总访客数 &#123;&#125; 人&quot;</span><br><br>YAML<br></code></pre></td></tr></table></figure><h4 id="2-展示文章日期-x2F-字数-x2F-阅读时长-x2F-阅读数"><a href="#2-展示文章日期-x2F-字数-x2F-阅读时长-x2F-阅读数" class="headerlink" title="2. 展示文章日期&#x2F;字数&#x2F;阅读时长&#x2F;阅读数"></a>2. 展示文章日期&#x2F;字数&#x2F;阅读时长&#x2F;阅读数</h4><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">post:</span><br><span class="hljs-symbol">  meta:</span><br><span class="hljs-symbol">    author:</span> <span class="hljs-meta"># 作者，优先根据 front-matter 里 author 字段，其次是 hexo 配置中 author 值</span><br><span class="hljs-symbol">      enable:</span> false<br><span class="hljs-symbol">    date:</span> <span class="hljs-meta"># 文章日期，优先根据 front-matter 里 date 字段，其次是 md 文件日期</span><br><span class="hljs-symbol">      enable:</span> true<br><span class="hljs-symbol">      format:</span> <span class="hljs-string">&quot;LL a&quot;</span> <span class="hljs-meta"># 格式参照 ISO-8601 日期格式化 See: http:<span class="hljs-comment">//momentjs.cn/docs/#/parsing/string-format/</span></span><br><span class="hljs-symbol">    wordcount:</span> <span class="hljs-meta"># 字数统计</span><br><span class="hljs-symbol">      enable:</span> true<br><span class="hljs-symbol">      format:</span> <span class="hljs-string">&quot;&#123;&#125; 字&quot;</span><br><span class="hljs-symbol">    min2read:</span> <span class="hljs-meta"># 估计阅读全文需要的时长</span><br><span class="hljs-symbol">      enable:</span> true<br><span class="hljs-symbol">      awl:</span> <span class="hljs-number">2</span><br><span class="hljs-symbol">      wpm:</span> <span class="hljs-number">60</span><br><span class="hljs-symbol">      format:</span> <span class="hljs-string">&quot;&#123;&#125; 分钟&quot;</span><br><span class="hljs-symbol">    views:</span> <span class="hljs-meta"># 浏览量计数</span><br><span class="hljs-symbol">      enable:</span> true<br><span class="hljs-symbol">      source:</span> <span class="hljs-string">&quot;leancloud&quot;</span><br><span class="hljs-symbol">      format:</span> <span class="hljs-string">&quot;&#123;&#125; 次&quot;</span><br><br>YAML<br></code></pre></td></tr></table></figure><h4 id="3-文章评论功能"><a href="#3-文章评论功能" class="headerlink" title="3. 文章评论功能"></a>3. 文章评论功能</h4><p>开启评论需要在<strong>主题配置</strong>中开启并指定评论插件，这里使用基于 <code>LeanCloud</code> 的 <code>Valine</code></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">post:</span><br><span class="hljs-symbol">  comments:</span><br><span class="hljs-symbol">    enable:</span> true<br>    <span class="hljs-meta"># 指定的插件，需要同时设置对应插件的必要参数</span><br>    <span class="hljs-meta"># Options: utterances | disqus | gitalk | valine | waline | changyan | livere | remark42 | twikoo | cusdis | giscus</span><br><span class="hljs-symbol">    type:</span> valine<br><br><span class="hljs-meta"># Valine</span><br><span class="hljs-meta"># 基于 LeanCloud</span><br><span class="hljs-meta"># See: https:<span class="hljs-comment">//valine.js.org/</span></span><br><span class="hljs-symbol">valine:</span><br><span class="hljs-symbol">  appId:</span> <span class="hljs-meta"># LeanCloud AppID</span><br><span class="hljs-symbol">  appKey:</span> <span class="hljs-meta"># LeanCloud AppKey</span><br><br>YAML<br></code></pre></td></tr></table></figure><h3 id="六、发布-GitHub-Pages"><a href="#六、发布-GitHub-Pages" class="headerlink" title="六、发布 GitHub Pages"></a>六、发布 GitHub Pages</h3><p>安装 <code>hexo-deployer-git</code></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br><br>BASH<br></code></pre></td></tr></table></figure><p>修改站点配置 <code>_config.yml</code></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> <span class="hljs-params">&lt;repository url&gt;</span> <span class="hljs-meta"># https:<span class="hljs-comment">//github.com/&lt;GitHub用户名&gt;/&lt;GitHub用户名&gt;.github.io.git</span></span><br><span class="hljs-symbol">  branch:</span> [branch]<br><span class="hljs-symbol">  token:</span> [token]<br><br>YAML<br></code></pre></td></tr></table></figure><p>生成站点文件并推送至远程 <code>GitHub</code> 仓库</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span><br><span class="hljs-attribute">hexo deploy</span><br><span class="hljs-attribute"></span><br><span class="hljs-attribute">BASH</span><br></code></pre></td></tr></table></figure><p>登入 <code>Github</code>，请在库设置（Repository Settings）中将默认分支设置为 <code>_config.yml</code> 配置中的分支名称。稍等片刻，您的站点就会显示在您的Github Pages中。</p><h3 id="七、参考资料"><a href="#七、参考资料" class="headerlink" title="七、参考资料"></a>七、参考资料</h3><ul><li><a href="https://hexo.io/zh-cn/docs/">Hexo Docs</a></li><li><a href="https://fluid-dev.github.io/hexo-fluid-docs/">Hexo Fluid 用户手册</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/11/27/hello-world/"/>
    <url>/2022/11/27/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
